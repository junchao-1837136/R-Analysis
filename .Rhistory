qt(0.95,28)
pnorm(85,90,10,lower.tail=FALSE)
128*pnorm(85,90,10,lower.tail=FALSE)
qf(0.95,2,87)
1-pf(8.001,2,87)
F(3,574,0.05)
qf(0.95,3,574)
qchisq(0.95,3)
qchisq(0.975,3)
qf(0.975,34,30)
dbinom(10,15,0.44)
res <- prop.test(x = 167, n = 250, p = 0.59,
correct = FALSE)
res
qnorm(0.95)
qnorm(0.99)
exp(0.1479+0.5036*1.3)/(1+exp(0.1479+0.5036*1.3))
library(tidyverse)
library(openintro)
if (a=b){
print("hi")
}
if (a==b){
print("hi")
}
if (2==2){
print("hi")
}
grades <- list(
exam_1 = c(100, 94, 93),
exam_2 = c(88, 91, 98)
)
min(grades)
lapply(grades, min)
applicant <- list(
degree = "Informatics",
languages = c("R", "JavaScript", "Python"),
interests = c("Healthcare", "Data Science")
)
applicant$languages
applicant[["languages"]]
applicant["languages"]
applicant[languages]
a <- c(4, 4, 8)
b <- c(2, 1)
c <- a + b
prices <- c(9, 44, 2, 3, 5)
5 <- prices[prices < 5]
prices[prices < 5] <- 5
student_grades <- c(82, 74, 91, 92)
student_grades[student_grades > 82]
student_names <- c("Nate", "Ani", "Jeremy", "Daria")
student_names[student_grades > 82]
prices <- prices[prices < 5]
prices <- c(9, 44, 2, 3, 5)
prices <- prices[prices < 5]
prices <- c(9, 44, 2, 3, 5)
prices[prices < 5] <- 5
5 <- prices[prices < 5]
# Combine your two vectors into a dataframe called `games`
games <- data.frame(points, points_allowed)
# Create a vector of the number of points the Seahawks scored in the first 4 games
# of the season (google "Seahawks" for the scores!)
points <- c(17, 28, 17, 20)
# Create a vector of the number of points the Seahwaks have allowed to be scored
# against them in each of the first 4 games of the season
points_allowed <- c(30, 21, 26, 23)
# Combine your two vectors into a dataframe called `games`
games <- data.frame(points, points_allowed)
# Install the `"nycflights13"` package. Load (`library()`) the package.
# You'll also need to load `dplyr`
#install.packages("nycflights13")  # should be done already
library("nycflights13")
# Create a dataframe of the average arrival delays for each _destination_, then
# use `left_join()` to join on the "airports" dataframe, which has the airport
# information
# Which airport had the largest average arrival delay?
largest_arrival_delay <- flights %>%
group_by(dest) %>%
summarise(avg_delay = mean(arr_delay, na.rm = TRUE)) %>%
mutate(faa = dest) %>%
left_join(airports, by = "faa") %>%
filter(avg_delay == max(avg_delay, na.rm = TRUE))
library("dplyr")
# Create a dataframe of the average arrival delays for each _destination_, then
# use `left_join()` to join on the "airports" dataframe, which has the airport
# information
# Which airport had the largest average arrival delay?
largest_arrival_delay <- flights %>%
group_by(dest) %>%
summarise(avg_delay = mean(arr_delay, na.rm = TRUE)) %>%
mutate(faa = dest) %>%
left_join(airports, by = "faa") %>%
filter(avg_delay == max(avg_delay, na.rm = TRUE))
largest_arrival_delay
flights
flights$arr_time
largest_arrival_late <- flights %>%
group_by(dest) %>%
summarise(avg_late = mean(arr_time, na.rm = TRUE)) %>%
arrange(desc(avg_late))
largest_arrival_late
View(flights)
library("dplyr")
covid<-read.csv("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv")
wa_data<-covid %>%
filter(state=="Washington")
wa_data %>%
arrange(date) %>%
mutate(new_deaths=deaths-lag(deaths))
new_death<-wa_data %>%
arrange(date) %>%
mutate(new_deaths=deaths-lag(deaths))
max(new_death$new_deaths)
new_death<-wa_data %>%
arrange(date) %>%
mutate(new_deaths=deaths-lag(deaths))
max(new_death$new_deaths, na.rm=TRUE)
new_death %>%
filter(new_deaths==133)
max_death<-max(new_death$new_deaths, na.rm=TRUE)
#2020-12-29 has the highest number of new death.
min_death<-min(new_death$new_deaths, na.rm=TRUE)
new_death %>%
filter(new_deaths==min_death)
plot(new_death$new_deaths)
ppois(2,1.2)
dpois(0,1.2)+dpois(1,1.2)+dpois(2,1.2)
pgeom(3,1/6)
1-pbinom(4, 6, 0.2)
dbinom(3,20,0.1)
dhyper(3,10,90,20)
1-pbinom(2,5,0.4)
1-pbinom(2,5,0.6)
ggplot(df) +
geom_col(mapping = aes(x = label, y = value, fill = "blue"))
library(ggplot2)
df <- data.frame(
label = c("A", "B", "C", "D"),
value = 1:4,
stringsAsFactors = F
)
df
ggplot(df) +
geom_col(mapping = aes(x = label, y = value, fill = "blue"))
ggplot(df) +
geom_col(mapping = aes(x = label, y = value, Fill = "blue"))
library(tidyverse)
library(openintro)
library(infer)
2*5.34-10.25
sqrt(4*0.13+0.19)
1-pnorm(0, 0.43, 0.84)
ZOD <- read_csv("ZODTwoGroups.csv")
ZOD$Pie <- factor(ZOD$Pie)
View(ZOD)
ZOD %>%
group_by(Pie) %>%
boxplot(ZOD)
ZOD %>%
group_by(Pie) %>%
boxplot()
ZOD %>%
group_by(Pie) %>%
boxplot(Apple, Cherry)
ZOD %>%
group_by(Pie) %>%
boxplot(Pie="Apple", Pie="Cherry")
sqrt(4*0.13^2+0.19^2)
1-pnorm(0, 0.43, 0.32)
ZOD %>%
boxplot(ZOD, by=Pie)
ZOD %>%
boxplot(ZOD, by="Pie")
x<-ZOD %>%
filter(Pie=="Apple") %>%
pull(ZOD)
y<-ZOD %>%
filter(Pie=="Cherry") %>%
pull(ZOD)
boxplot(x,y)
x<-ZOD %>%
filter(Pie=="Apple") %>%
pull(ZOD)
y<-ZOD %>%
filter(Pie=="Cherry") %>%
pull(ZOD)
boxplot(x,y,
names=c("Apple", "Cherry"))
p<- ggplot(ZOD, aes(x=Pie, y=ZOD))+
geom_boxplot()+xlab("Pie")+ylab("ZOD")
p<- ggplot(ZOD, aes(x=Pie, y=ZOD))+
geom_boxplot()+xlab("Pie")+ylab("ZOD")
p
global<-read.csv(GlobalLandTemperaturesByCity.csv)
global<-read.csv("GlobalLandTemperaturesByCity.csv")
setwd("C:/Users/junzh/Desktop/UW/AU21/INFO 201/INFO-201-Final-Project")
global<-read.csv("GlobalLandTemperaturesByCity.csv")
View(global)
global<-read.csv("GlobalTemperatures.csv")
View(global)
summary_info$max_land_temp <- global %>%
filter(LandMaxTemperature==max(LandMaxTemperature, na.rm=TRUE)) %>%
select(LandMaxTemperature)
library(dplyr)
summary_info$max_land_temp <- global %>%
filter(LandMaxTemperature==max(LandMaxTemperature, na.rm=TRUE)) %>%
select(LandMaxTemperature)
summary_info <- list()
summary_info$num_observations <- nrow(global)
summary_info$max_land_temp <- global %>%
filter(LandMaxTemperature==max(LandMaxTemperature, na.rm=TRUE)) %>%
select(LandMaxTemperature)
View(summary_info)
summary_info
summary_info$max_land_temp <- global %>%
filter(LandMaxTemperature==max(LandMaxTemperature, na.rm=TRUE)) %>%
pull(LandMaxTemperature)
summary_info$min_land_temp <- global %>%
filter(LandMinTemperature==min(LandMinTemperature, na.rm=TRUE)) %>%
pull(LandMinTemperature)
summary_info$average_land_temp <-
mean(global$LandAverageTemperature, na.rm=TRUE)
summary_info$average_land_ocean_temp <-
mean(global$LandAndOceanAverageTemperature, na.rm=TRUE)
summary_info
global<-read.csv("GlobalTemperatures.csv")
library(dplyr)
table <- global %>%
mutate(year=format(dt, "%Y")) %>%
group_by(year) %>%
summarize(average = mean(LandAverageTemperature))
table <- global %>%
mutate(year=format(as.Date(dt), "%Y")) %>%
group_by(year) %>%
summarize(average = mean(LandAverageTemperature))
View(table)
table <- global %>%
mutate(year=format(as.Date(dt), "%Y")) %>%
group_by(year) %>%
summarize(average = mean(LandAverageTemperature, na.rm=TRUE))
View(table)
average_land_by_year <- global %>%
mutate(year=format(as.Date(dt), "%Y")) %>%
group_by(year) %>%
summarize(average = mean(LandAverageTemperature, na.rm=TRUE))
source("summary.R")
source("table.R")
global<-read.csv("data/GlobalTemperatures.csv")
View(average_land_by_year)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(leaflet)
library(RColorBrewer)
library(maps)
library(mapproj)
library(patchwork)
knitr::opts_chunk$set(echo = TRUE)
source("Chart_1.R")
source("Chart_2.R")
source("Chart_3.R")
source("summary.R")
source("table.R")
summary_info
shiny::runApp()
library("ggplot2")
library("plotly")
library("shiny")
library("ggplot2")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
data2 <- read.csv("data/GlobalTemperatures.csv")
View(data2)
temp_change <- global_temp %>%
drop_na(LandAverageTemperature) %>%
mutate(dt = as.Date(dt)) %>%
mutate(year = format(dt, "%Y")) %>%
group_by(year) %>%
summarize(avg_temp = mean(LandAverageTemperature, na.rm = TRUE))
temp_change <- data2 %>%
drop_na(LandAverageTemperature) %>%
mutate(dt = as.Date(dt)) %>%
mutate(year = format(dt, "%Y")) %>%
group_by(year) %>%
summarize(avg_temp = mean(LandAverageTemperature, na.rm = TRUE))
View(temp_change)
year1750 <- temp_change %>%
filter(year==1750) %>%
pull(avg_temp)
year1750 <- temp_change %>%
filter(year==1750) %>%
pull(round(avg_temp,2))
year1750 <- temp_change %>%
filter(year==1750) %>%
pull(avg_temp) %>%
round(2)
year2015 <- temp_change %>%
filter(year==2015) %>%
pull(avg_temp) %>%
round(2)
runApp()
year1850 <- temp_change %>%
filter(year==1850) %>%
pull(avg_temp) %>%
round(2)
year1850 <- temp_change %>%
filter(year==1850) %>%
pull(avg_temp) %>%
round(2)
year1850 <- temp_change %>%
filter(year==1850) %>%
pull(avg_temp) %>%
round(2)
year1850 <- temp_change %>%
filter(year==1850) %>%
pull(avg_temp) %>%
round(2)
year2015 <- temp_change %>%
filter(year==2015) %>%
pull(avg_temp) %>%
round(2)
runApp()
year2010 <- temp_change %>%
filter(year==2010) %>%
pull(avg_temp) %>%
round(2)
temp_change_country <- data2 %>%
drop_na(LandAverageTemperature) %>%
mutate(dt = as.Date(dt)) %>%
mutate(year = format(dt, "%Y")) %>%
filter(year == 2010 | year == 1850)
View(temp_change_country)
data3 <- read.csv("data/GlobalLandTemperaturesByCountry.csv")
temp_change_country <- data3 %>%
drop_na(LandAverageTemperature) %>%
mutate(dt = as.Date(dt)) %>%
mutate(year = format(dt, "%Y")) %>%
filter(year == 2010 | year == 1850)
View(data3)
temp_change_country <- data3 %>%
drop_na(AverageTemperature) %>%
mutate(dt = as.Date(dt)) %>%
mutate(year = format(dt, "%Y")) %>%
filter(year == 2010 | year == 1850)
View(temp_change_country)
temp_change_country <- data3 %>%
drop_na(AverageTemperature) %>%
mutate(dt = as.Date(dt)) %>%
mutate(year = format(dt, "%Y")) %>%
filter(year == 2010 | year == 1850) %>%
group_by(year, Country) %>%
summarize(avg_temp = mean(AverageTemperature, na.rm = TRUE))
View(temp_change_country)
temp_country_1850 <- data3 %>%
drop_na(AverageTemperature) %>%
mutate(dt = as.Date(dt)) %>%
mutate(year = format(dt, "%Y")) %>%
filter(year == 1850) %>%
group_by(Country) %>%
summarize(avg_temp = mean(AverageTemperature, na.rm = TRUE))
temp_country_2010 <- data3 %>%
drop_na(AverageTemperature) %>%
mutate(dt = as.Date(dt)) %>%
mutate(year = format(dt, "%Y")) %>%
filter(year == 2010) %>%
group_by(Country) %>%
summarize(avg_temp = mean(AverageTemperature, na.rm = TRUE))
temp_country_old <- data3 %>%
drop_na(AverageTemperature) %>%
mutate(dt = as.Date(dt)) %>%
mutate(year = format(dt, "%Y")) %>%
filter(year == 1850) %>%
group_by(Country) %>%
summarize(avg_temp = mean(AverageTemperature, na.rm = TRUE))
temp_country_new <- data3 %>%
drop_na(AverageTemperature) %>%
mutate(dt = as.Date(dt)) %>%
mutate(year = format(dt, "%Y")) %>%
filter(year == 2010) %>%
group_by(Country) %>%
summarize(avg_temp_new = mean(AverageTemperature, na.rm = TRUE))
temp_country<-left_join(temp_country_new, temp_country_old, by="Country")
View(temp_country)
temp_diff <- temp_country %>%
filter(!is.na(avg_temp))
temp_diff <- temp_country %>%
filter(!is.na(avg_temp)) %>%
mutate(diff=avg_temp_new-avg_temp)
View(temp_diff)
max_diff <- temp_diff %>%
filter(max(diff)) %>%
pull(Country)
max_diff <- temp_diff %>%
filter(diff==max(diff)) %>%
pull(Country)
min_diff <- temp_diff %>%
filter(diff==min(diff)) %>%
pull(Country)
temp_diff <- temp_country %>%
filter(!is.na(avg_temp)) %>%
summarize(diff=avg_temp_new-avg_temp)
View(temp_diff)
temp_diff <- temp_country %>%
filter(!is.na(avg_temp)) %>%
summarize(Country, diff=avg_temp_new-avg_temp)
View(temp_diff)
max_diff <- temp_diff %>%
filter(diff==max(diff))
min_diff <- temp_diff %>%
filter(diff==min(diff))
View(max_diff)
View(max_diff)
max_diff <- temp_diff %>%
filter(diff==max(diff)) %>%
round(2)
max_diff <- temp_diff %>%
filter(diff==max(diff)) %>%
round(diff, 2)
max_diff <- temp_diff %>%
filter(diff==max(diff)) %>%
round(diff, 2)
max_diff <- temp_diff %>%
filter(diff==max(diff)) %>%
round(diff[2], 2)
max_diff <- temp_diff %>%
filter(diff==max(diff)) %>%
round(diff[1], 2)
temp_diff <- temp_country %>%
filter(!is.na(avg_temp)) %>%
summarize(Country, diff=avg_temp_new-avg_temp) %>%
round(2)
temp_diff <- temp_country %>%
filter(!is.na(avg_temp)) %>%
group_by(Country) %>%
summarize(diff=avg_temp_new-avg_temp) %>%
round(2)
temp_diff <- temp_country %>%
filter(!is.na(avg_temp)) %>%
summarize(diff=round(avg_temp_new-avg_temp, 2))
max_diff <- temp_diff %>%
filter(diff==max(diff))
min_diff <- temp_diff %>%
filter(diff==min(diff))
View(max_diff)
temp_diff <- temp_country %>%
filter(!is.na(avg_temp)) %>%
summarize(Country, diff=round(avg_temp_new-avg_temp, 2))
max_diff <- temp_diff %>%
filter(diff==max(diff))
min_diff <- temp_diff %>%
filter(diff==min(diff))
View(max_diff)
View(min_diff)
runApp()
max_temp_2010 <-temp_country_new %>%
filter(avg_temp_new== max(avg_temp_new))
View(max_temp_2010)
min_temp_2010 <-temp_country_new %>%
filter(avg_temp_new== min(avg_temp_new))
View(min_temp_2010)
min_temp_1850 <-temp_country_new %>%
filter(avg_temp_new== min(avg_temp_new))
View(min_temp_1850)
min_temp_1850 <-temp_country_old %>%
filter(avg_temp== min(avg_temp_new))
max_temp_2010 <-temp_country_new %>%
filter(avg_temp_new== max(avg_temp_new))
max_temp_1850 <-temp_country_old%>%
filter(avg_temp== max(avg_temp_new))
min_temp_1850 <-temp_country_old %>%
filter(avg_temp== min(avg_temp))
max_temp_1850 <-temp_country_old%>%
filter(avg_temp== max(avg_temp))
View(max_temp_1850)
View(max_temp_2010)
runApp()
runApp()
shiny::runApp()
